{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\HPE\\\\frontend\\\\src\\\\component\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Header, Heading, Text, Grommet, Table, TableHeader, TableCell, TableBody, TableRow, ResponsiveContext } from 'grommet';\nimport { Hpe, Previous, Filter } from 'grommet-icons';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Foooter from './Foooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  let history = useHistory();\n  const theme = {\n    global: {\n      colors: {\n        brand: '#01A982'\n      },\n      font: {\n        family: 'Roboto',\n        size: '18px',\n        height: '20px'\n      }\n    }\n  };\n  const size = React.useContext(ResponsiveContext);\n  const [notes, setNotes] = useState([{\n    Device_Requestor: '',\n    Device_PR_No: '',\n    Device_PO_No: ''\n  }]);\n  useEffect(() => {\n    fetch(\"/dashboard\").then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setNotes(jsonRes));\n  });\n  console.log(setNotes);\n\n  function Tablee(props) {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Requestor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"PR Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"PO Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: [\"requestor=\", props.requestor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [\"pr_no=\", props.pr_no]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [\"po_no=\", props.po_no]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grommet, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        background: \"brand\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          direction: \"row\",\n          gap: \"small\",\n          pad: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(Hpe, {\n            color: \"White\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            weight: \"bold\",\n            children: \"HPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        alignSelf: \"center\",\n        border: {\n          color: 'brand',\n          size: 'medium'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          pad: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(Previous, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 27\n            }, this),\n            alignSelf: \"start\",\n            onClick: () => history.goBack()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            margin: {\n              left: 'medium'\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          direction: \"column\",\n          alignSelf: \"start\",\n          gap: \"medium\",\n          pad: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            direction: size !== 'small' ? 'row' : 'column',\n            align: \"center\",\n            gap: \"small\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Filter\",\n              icon: /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"column\",\n            children: notes.map(note => /*#__PURE__*/_jsxDEV(Tablee, {\n              requestor: note.Device_Requestor,\n              pr_no: note.Device_PR_No,\n              po_no: note.Device_PO_No\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Foooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dashboard, \"Jbk8SBCincxXc6b4TlxVLyRyKUQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/React/HPE/frontend/src/component/Dashboard.js"],"names":["Box","Button","Header","Heading","Text","Grommet","Table","TableHeader","TableCell","TableBody","TableRow","ResponsiveContext","Hpe","Previous","Filter","React","useState","useEffect","useHistory","Foooter","Dashboard","history","theme","global","colors","brand","font","family","size","height","useContext","notes","setNotes","Device_Requestor","Device_PR_No","Device_PO_No","fetch","then","res","ok","json","jsonRes","console","log","Tablee","props","requestor","pr_no","po_no","color","goBack","left","map","note"],"mappings":"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","sourcesContent":["import { Box, Button, Header, Heading, Text,Grommet, Table, TableHeader, TableCell, TableBody, TableRow, ResponsiveContext } from 'grommet';\r\nimport { Hpe, Previous, Filter } from 'grommet-icons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Foooter from './Foooter';\r\n\r\nfunction Dashboard() {\r\n\r\n  let history = useHistory();\r\n\r\n  const theme = {\r\n    global: {\r\n      colors: {\r\n        brand: '#01A982',\r\n      },\r\n      font: {\r\n        family: 'Roboto',\r\n        size: '18px',\r\n        height: '20px',\r\n      },\r\n    },\r\n  };\r\n  const size = React.useContext(ResponsiveContext);\r\n\r\n  const [notes, setNotes] = useState([{\r\n      Device_Requestor: '',\r\n      Device_PR_No: '',\r\n      Device_PO_No: ''\r\n  }])\r\n\r\n  useEffect(() => {\r\n      fetch(\"/dashboard\").then(res => {\r\n        if(res.ok) {\r\n          return res.json()\r\n        }\r\n      }).then(jsonRes => setNotes(jsonRes));\r\n  })\r\n\r\n  console.log(setNotes);\r\n\r\n\r\n  function Tablee(props){\r\n    return(\r\n      <Table>\r\n              <TableHeader>\r\n                <TableCell>Requestor</TableCell>\r\n                <TableCell>PR Number</TableCell>\r\n                <TableCell>PO Number</TableCell>\r\n              </TableHeader>\r\n              <TableRow>\r\n                <TableCell>requestor={props.requestor}</TableCell>\r\n                <TableCell>pr_no={props.pr_no}</TableCell>\r\n                <TableCell>po_no={props.po_no}</TableCell>\r\n              </TableRow>\r\n            </Table>\r\n    );\r\n  }\r\n\r\n  return(\r\n      <>\r\n      <Grommet theme={theme}>\r\n      <Header background=\"brand\">\r\n          <Box direction=\"row\" gap=\"small\" pad=\"medium\">\r\n              <Hpe color=\"White\"/>\r\n              <Text weight=\"bold\">HPE</Text>\r\n              <Text>Dashboard</Text>\r\n          </Box>\r\n      </Header>  \r\n      \r\n      <Box alignSelf=\"center\"  border={{ color: 'brand', size: 'medium' }} >\r\n        <Box pad=\"small\">\r\n            <Button icon={<Previous />} alignSelf=\"start\" onClick={() => history.goBack()}/>\r\n            <Heading margin={{left: 'medium'}} >Dashboard</Heading>\r\n        </Box>\r\n        \r\n\r\n        <Box direction=\"column\" alignSelf=\"start\" gap=\"medium\" pad=\"medium\"> \r\n        <Box direction={size !== 'small' ? 'row' : 'column'} align=\"center\" gap=\"small\" >\r\n          <Button label=\"Filter\" icon={<Filter />} />\r\n        </Box>\r\n            <Box direction=\"column\">\r\n\r\n              {notes.map(note => \r\n              <Tablee \r\n                requestor={note.Device_Requestor} \r\n                pr_no={note.Device_PR_No}\r\n                po_no={note.Device_PO_No}\r\n              />\r\n                )}\r\n\r\n              {/* <ul>\r\n                  <li>{note.Device_Requestor} {              } {note.Device_PR_No} {             } {note.Device_PO_No}</li>\r\n                  <li>{note.Device_PR_No}</li>\r\n                  <li>{note.Device_PO_No}</li>\r\n              </ul> */}\r\n              </Box>\r\n              \r\n          \r\n           \r\n        </Box>\r\n      </Box>\r\n      <Foooter />\r\n    </Grommet>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}